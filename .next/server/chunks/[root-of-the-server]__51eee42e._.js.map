{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/lib/mongoose.ts"],"sourcesContent":["// lib/mongoose.ts\r\nimport mongoose from \"mongoose\";\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"Please define MONGODB_URI in your .env file\");\r\n}\r\n\r\nlet isConnected = false;\r\n\r\nexport const connectDB = async () => {\r\n  if (isConnected) return;\r\n\r\n  try {\r\n    await mongoose.connect(MONGODB_URI);\r\n    isConnected = true;\r\n    console.log(\"✅ MongoDB connected\");\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB connection error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAClB;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,cAAc;AAEX,MAAM,YAAY;IACvB,IAAI,aAAa;IAEjB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/app/models/User.ts"],"sourcesContent":["// models/User.ts\r\nimport mongoose, { Schema, Document } from \"mongoose\";\r\n\r\nexport interface IUser extends Document {\r\n  email: string;\r\n  name: string;\r\n  password: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst UserSchema = new Schema<IUser>(\r\n  {\r\n    email: { type: String, required: true, unique: true },\r\n    name: { type: String, required: true },\r\n    password: { type: String, required: true },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Avoid model overwrite issue in Next.js hot-reload\r\nexport const User = mongoose.models.User || mongoose.model<IUser>(\"User\", UserSchema);\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAUA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAC3B;IACE,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC3C,GACA;IAAE,YAAY;AAAK;AAId,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/app/api/auth/register/route.ts"],"sourcesContent":["// app/api/auth/register/route.ts\r\nimport { NextResponse } from \"next/server\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { connectDB } from \"@/lib/mongoose\";\r\nimport { User } from \"@/app/models/User\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    await connectDB();\r\n    const { email, password, name } = await req.json();\r\n\r\n    if (!email || !password || !name) {\r\n      return NextResponse.json(\r\n        { error: \"Name, email and password required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const existing = await User.findOne({ email });\r\n    if (existing) {\r\n      return NextResponse.json(\r\n        { error: \"User already exists\" },\r\n        { status: 409 }\r\n      );\r\n    }\r\n\r\n    const hashed = await bcrypt.hash(password, 10);\r\n\r\n    const user = await User.create({ email, password: hashed, name });\r\n\r\n    return NextResponse.json(\r\n      { message: \"User created\", user: { id: user._id, email: user.email } },\r\n      { status: 201 }\r\n    );\r\n  } catch (err) {\r\n    console.error(err);\r\n    return NextResponse.json({ error: \"Server error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;AACjC;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD;QACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI;QAEhD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoC,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,WAAW,MAAM,uHAAA,CAAA,OAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAC5C,IAAI,UAAU;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAE3C,MAAM,OAAO,MAAM,uHAAA,CAAA,OAAI,CAAC,MAAM,CAAC;YAAE;YAAO,UAAU;YAAQ;QAAK;QAE/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAgB,MAAM;gBAAE,IAAI,KAAK,GAAG;gBAAE,OAAO,KAAK,KAAK;YAAC;QAAE,GACrE;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;AACF","debugId":null}}]
}