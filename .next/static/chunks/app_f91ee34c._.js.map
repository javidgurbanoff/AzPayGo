{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/app/components/Stepper.tsx"],"sourcesContent":["import React, {\r\n  useState,\r\n  Children,\r\n  useRef,\r\n  useLayoutEffect,\r\n  HTMLAttributes,\r\n  ReactNode,\r\n} from \"react\";\r\nimport { motion, AnimatePresence, Variants } from \"framer-motion\";\r\nimport { Switch } from \"@heroui/switch\";\r\n\r\ninterface StepperProps extends HTMLAttributes<HTMLDivElement> {\r\n  children: ReactNode;\r\n  initialStep?: number;\r\n  onStepChange?: (step: number) => void;\r\n  onFinalStepCompleted?: () => void;\r\n  stepCircleContainerClassName?: string;\r\n  stepContainerClassName?: string;\r\n  contentClassName?: string;\r\n  footerClassName?: string;\r\n  backButtonProps?: React.ButtonHTMLAttributes<HTMLButtonElement>;\r\n  nextButtonProps?: React.ButtonHTMLAttributes<HTMLButtonElement>;\r\n  backButtonText?: string;\r\n  nextButtonText?: string;\r\n  disableStepIndicators?: boolean;\r\n  renderStepIndicator?: (props: {\r\n    step: number;\r\n    currentStep: number;\r\n    onStepClick: (clicked: number) => void;\r\n  }) => ReactNode;\r\n}\r\n\r\nexport default function Stepper({\r\n  children,\r\n  initialStep = 1,\r\n  onStepChange = () => {},\r\n  onFinalStepCompleted = () => {},\r\n  stepCircleContainerClassName = \"\",\r\n  stepContainerClassName = \"\",\r\n  contentClassName = \"\",\r\n  footerClassName = \"\",\r\n  backButtonProps = {},\r\n  nextButtonProps = {},\r\n  backButtonText = \"Back\",\r\n  nextButtonText = \"Continue\",\r\n  disableStepIndicators = false,\r\n  renderStepIndicator,\r\n  ...rest\r\n}: StepperProps) {\r\n  const [currentStep, setCurrentStep] = useState<number>(initialStep);\r\n  const [direction, setDirection] = useState<number>(0);\r\n  const stepsArray = Children.toArray(children);\r\n  const totalSteps = stepsArray.length;\r\n  const isCompleted = currentStep > totalSteps;\r\n  const isLastStep = currentStep === totalSteps;\r\n\r\n  const updateStep = (newStep: number) => {\r\n    setCurrentStep(newStep);\r\n    if (newStep > totalSteps) {\r\n      onFinalStepCompleted();\r\n    } else {\r\n      onStepChange(newStep);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (currentStep > 1) {\r\n      setDirection(-1);\r\n      updateStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!isLastStep) {\r\n      setDirection(1);\r\n      updateStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setDirection(1);\r\n    updateStep(totalSteps + 1);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"flex min-h-full flex-1 flex-col items-center justify-center p-4 sm:aspect-[4/3] md:aspect-[2/1]\"\r\n      {...rest}\r\n    >\r\n      <div\r\n        className={`mx-auto w-full max-w-md rounded-4xl shadow-xl ${stepCircleContainerClassName}`}\r\n        style={{ border: \"1px solid #222\" }}\r\n      >\r\n        <div\r\n          className={`${stepContainerClassName} flex w-full items-center p-8`}\r\n        >\r\n          {stepsArray.map((_, index) => {\r\n            const stepNumber = index + 1;\r\n            const isNotLastStep = index < totalSteps - 1;\r\n            return (\r\n              <React.Fragment key={stepNumber}>\r\n                {renderStepIndicator ? (\r\n                  renderStepIndicator({\r\n                    step: stepNumber,\r\n                    currentStep,\r\n                    onStepClick: (clicked) => {\r\n                      setDirection(clicked > currentStep ? 1 : -1);\r\n                      updateStep(clicked);\r\n                    },\r\n                  })\r\n                ) : (\r\n                  <StepIndicator\r\n                    step={stepNumber}\r\n                    disableStepIndicators={disableStepIndicators}\r\n                    currentStep={currentStep}\r\n                    onClickStep={(clicked) => {\r\n                      setDirection(clicked > currentStep ? 1 : -1);\r\n                      updateStep(clicked);\r\n                    }}\r\n                  />\r\n                )}\r\n                {isNotLastStep && (\r\n                  <StepConnector isComplete={currentStep > stepNumber} />\r\n                )}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <StepContentWrapper\r\n          isCompleted={isCompleted}\r\n          currentStep={currentStep}\r\n          direction={direction}\r\n          className={`space-y-2 px-8 ${contentClassName}`}\r\n        >\r\n          {stepsArray[currentStep - 1]}\r\n        </StepContentWrapper>\r\n\r\n        {!isCompleted && (\r\n          <div className={`px-8 pb-8 ${footerClassName}`}>\r\n            <div\r\n              className={`mt-10 flex ${\r\n                currentStep !== 1 ? \"justify-between\" : \"justify-end\"\r\n              }`}\r\n            >\r\n              {currentStep !== 1 && (\r\n                <button\r\n                  onClick={handleBack}\r\n                  className={`duration-350 rounded px-2 py-1 transition ${\r\n                    currentStep === 1\r\n                      ? \"pointer-events-none opacity-50 text-neutral-400\"\r\n                      : \"text-neutral-400 hover:text-neutral-700\"\r\n                  }`}\r\n                  {...backButtonProps}\r\n                >\r\n                  {backButtonText}\r\n                </button>\r\n              )}\r\n              <button\r\n                onClick={isLastStep ? handleComplete : handleNext}\r\n                className=\"duration-350 flex items-center justify-center rounded-full bg-green-500 py-1.5 px-3.5 font-medium tracking-tight text-white transition hover:bg-green-600 active:bg-green-700\"\r\n                {...nextButtonProps}\r\n              >\r\n                {isLastStep ? \"Complete\" : nextButtonText}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface StepContentWrapperProps {\r\n  isCompleted: boolean;\r\n  currentStep: number;\r\n  direction: number;\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\nfunction StepContentWrapper({\r\n  isCompleted,\r\n  currentStep,\r\n  direction,\r\n  children,\r\n  className = \"\",\r\n}: StepContentWrapperProps) {\r\n  const [parentHeight, setParentHeight] = useState<number>(0);\r\n\r\n  return (\r\n    <motion.div\r\n      style={{ position: \"relative\", overflow: \"hidden\" }}\r\n      animate={{ height: isCompleted ? 0 : parentHeight }}\r\n      transition={{ type: \"spring\", duration: 0.4 }}\r\n      className={className}\r\n    >\r\n      <AnimatePresence initial={false} mode=\"sync\" custom={direction}>\r\n        {!isCompleted && (\r\n          <SlideTransition\r\n            key={currentStep}\r\n            direction={direction}\r\n            onHeightReady={(h) => setParentHeight(h)}\r\n          >\r\n            {children}\r\n          </SlideTransition>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\ninterface SlideTransitionProps {\r\n  children: ReactNode;\r\n  direction: number;\r\n  onHeightReady: (height: number) => void;\r\n}\r\n\r\nfunction SlideTransition({\r\n  children,\r\n  direction,\r\n  onHeightReady,\r\n}: SlideTransitionProps) {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (containerRef.current) {\r\n      onHeightReady(containerRef.current.offsetHeight);\r\n    }\r\n  }, [children, onHeightReady]);\r\n\r\n  return (\r\n    <motion.div\r\n      ref={containerRef}\r\n      custom={direction}\r\n      variants={stepVariants}\r\n      initial=\"enter\"\r\n      animate=\"center\"\r\n      exit=\"exit\"\r\n      transition={{ duration: 0.4 }}\r\n      style={{ position: \"absolute\", left: 0, right: 0, top: 0 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nconst stepVariants: Variants = {\r\n  enter: (dir: number) => ({\r\n    x: dir >= 0 ? \"-100%\" : \"100%\",\r\n    opacity: 0,\r\n  }),\r\n  center: {\r\n    x: \"0%\",\r\n    opacity: 1,\r\n  },\r\n  exit: (dir: number) => ({\r\n    x: dir >= 0 ? \"50%\" : \"-50%\",\r\n    opacity: 0,\r\n  }),\r\n};\r\n\r\ninterface StepProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function Step({ children }: StepProps) {\r\n  return <div className=\"px-8\">{children}</div>;\r\n}\r\n\r\ninterface StepIndicatorProps {\r\n  step: number;\r\n  currentStep: number;\r\n  onClickStep: (clicked: number) => void;\r\n  disableStepIndicators?: boolean;\r\n}\r\n\r\nfunction StepIndicator({\r\n  step,\r\n  currentStep,\r\n  onClickStep,\r\n  disableStepIndicators = false,\r\n}: StepIndicatorProps) {\r\n  const status =\r\n    currentStep === step\r\n      ? \"active\"\r\n      : currentStep < step\r\n      ? \"inactive\"\r\n      : \"complete\";\r\n\r\n  const handleClick = () => {\r\n    if (step !== currentStep && !disableStepIndicators) {\r\n      onClickStep(step);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      onClick={handleClick}\r\n      className=\"relative cursor-pointer outline-none focus:outline-none\"\r\n      animate={status}\r\n      initial={false}\r\n    >\r\n      <motion.div\r\n        variants={{\r\n          inactive: { scale: 1, backgroundColor: \"#222\", color: \"#a3a3a3\" },\r\n          active: { scale: 1, backgroundColor: \"#5227FF\", color: \"#5227FF\" },\r\n          complete: { scale: 1, backgroundColor: \"#5227FF\", color: \"#3b82f6\" },\r\n        }}\r\n        transition={{ duration: 0.3 }}\r\n        className=\"flex h-8 w-8 items-center justify-center rounded-full font-semibold\"\r\n      >\r\n        {status === \"complete\" ? (\r\n          <CheckIcon className=\"h-4 w-4 text-black\" />\r\n        ) : status === \"active\" ? (\r\n          <div className=\"h-3 w-3 rounded-full bg-[#060010]\" />\r\n        ) : (\r\n          <span className=\"text-sm\">{step}</span>\r\n        )}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\ninterface StepConnectorProps {\r\n  isComplete: boolean;\r\n}\r\n\r\nfunction StepConnector({ isComplete }: StepConnectorProps) {\r\n  const lineVariants: Variants = {\r\n    incomplete: { width: 0, backgroundColor: \"transparent\" },\r\n    complete: { width: \"100%\", backgroundColor: \"#5227FF\" },\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative mx-2 h-0.5 flex-1 overflow-hidden rounded bg-neutral-600\">\r\n      <motion.div\r\n        className=\"absolute left-0 top-0 h-full\"\r\n        variants={lineVariants}\r\n        initial={false}\r\n        animate={isComplete ? \"complete\" : \"incomplete\"}\r\n        transition={{ duration: 0.4 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CheckIconProps extends React.SVGProps<SVGSVGElement> {}\r\n\r\nfunction CheckIcon(props: CheckIconProps) {\r\n  return (\r\n    <svg\r\n      {...props}\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth={2}\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <motion.path\r\n        initial={{ pathLength: 0 }}\r\n        animate={{ pathLength: 1 }}\r\n        transition={{\r\n          delay: 0.1,\r\n          type: \"tween\",\r\n          ease: \"easeOut\",\r\n          duration: 0.3,\r\n        }}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M5 13l4 4L19 7\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/app/components/Navbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\nimport { Menu, X } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function Navbar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleMenu = () => setIsOpen(!isOpen);\r\n\r\n  const navLinks = [\r\n    { href: \"/\", label: \"Home\" },\r\n    { href: \"/explore\", label: \"Explore\" },\r\n    { href: \"/pricing\", label: \"Pricing\" },\r\n    { href: \"/about\", label: \"About\" },\r\n    { href: \"/contact\", label: \"Contact\" },\r\n  ];\r\n\r\n  return (\r\n    <header className=\"bg-[#0B1F3A] shadow-md sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-3 flex justify-between items-center\">\r\n        <Link href=\"/\">\r\n          <div className=\"text-3xl font-bold tracking-tight text-[#FFFFFF] hover:text-[#1A73E8] transition-colors duration-300 cursor-pointer\">\r\n            AzPayGo\r\n          </div>\r\n        </Link>\r\n        <nav className=\"hidden md:flex gap-6\">\r\n          {navLinks.map(({ href, label }) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              className=\"text-[#FFFFFF] hover:text-[#1A73E8] transition\"\r\n            >\r\n              {label}\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n        <button className=\"md:hidden\" onClick={toggleMenu}>\r\n          {isOpen ? <X size={24} /> : <Menu size={24} />}\r\n        </button>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"md:hidden px-4 pb-4\">\r\n          {navLinks.map(({ href, label }) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              className=\"block py-2 text-gray-700 hover:text-black transition\"\r\n              onClick={() => setIsOpen(false)}\r\n            >\r\n              {label}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;;;AAJA;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa,IAAM,UAAU,CAAC;IAEpC,MAAM,WAAW;QACf;YAAE,MAAM;YAAK,OAAO;QAAO;QAC3B;YAAE,MAAM;YAAY,OAAO;QAAU;QACrC;YAAE,MAAM;YAAY,OAAO;QAAU;QACrC;YAAE,MAAM;YAAU,OAAO;QAAQ;QACjC;YAAE,MAAM;YAAY,OAAO;QAAU;KACtC;IAED,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,6LAAC;4BAAI,WAAU;sCAAsH;;;;;;;;;;;kCAIvI,6LAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC;gCAAC,EAAE,IAAI,EAAE,KAAK,EAAE;iDAC5B,6LAAC,+JAAA,CAAA,UAAI;gCAEH,MAAM;gCACN,WAAU;0CAET;+BAJI;;;;;;;;;;;kCAQX,6LAAC;wBAAO,WAAU;wBAAY,SAAS;kCACpC,uBAAS,6LAAC,+LAAA,CAAA,IAAC;4BAAC,MAAM;;;;;iDAAS,6LAAC,qMAAA,CAAA,OAAI;4BAAC,MAAM;;;;;;;;;;;;;;;;;YAI3C,wBACC,6LAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC;wBAAC,EAAE,IAAI,EAAE,KAAK,EAAE;yCAC5B,6LAAC,+JAAA,CAAA,UAAI;wBAEH,MAAM;wBACN,WAAU;wBACV,SAAS,IAAM,UAAU;kCAExB;uBALI;;;;;;;;;;;;;;;;;AAYnB;GArDwB;KAAA","debugId":null}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/app/about/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Stepper, { Step } from \"../components/Stepper\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Leapfrog } from \"ldrs/react\";\r\nimport { Switch } from \"@headlessui/react\";\r\n\r\nexport default function About() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name] = useState(\"\");\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [enabled, setEnabled] = useState(false);\r\n\r\n  const handleFinalStep = () => {\r\n    setShowLoader(true);\r\n    setTimeout(() => {\r\n      setShowLoader(false);\r\n      setCompleted(true);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"p-4\">\r\n        {!showLoader && !completed && (\r\n          <Stepper\r\n            initialStep={1}\r\n            onStepChange={(step) => {\r\n              console.log(\"Current step:\", step);\r\n            }}\r\n            onFinalStepCompleted={handleFinalStep}\r\n            backButtonText=\"Previous\"\r\n            nextButtonText=\"Next\"\r\n          >\r\n            <Step>\r\n              <h2 className=\"text-xl font-semibold mb-2\">\r\n                Welcome to the AzPaygo!\r\n              </h2>\r\n              <p>Check out the next step!</p>\r\n            </Step>\r\n\r\n            <Step>\r\n              <h2 className=\"text-xl font-semibold mb-2\">\r\n                Please include your email address to verify your account.{\" \"}\r\n              </h2>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Your email?\"\r\n                className=\"border p-2 rounded mt-2 w-full max-w-md\"\r\n              />{\" \"}\r\n              <p>You are almost there!</p>\r\n              <div className=\"flex items-center space-x-3\">\r\n                <Switch\r\n                  checked={enabled}\r\n                  onChange={setEnabled}\r\n                  className={`${\r\n                    enabled ? \"bg-blue-600\" : \"bg-gray-200\"\r\n                  } relative inline-flex h-6 w-11 items-center rounded-full transition-colors`}\r\n                >\r\n                  <span\r\n                    className={`${\r\n                      enabled ? \"translate-x-6\" : \"translate-x-1\"\r\n                    } inline-block h-4 w-4 transform bg-white rounded-full transition-transform`}\r\n                  />\r\n                </Switch>\r\n                <span className=\"text-sm text-[#5227ff]\">\r\n                  I accept the terms and conditions\r\n                </span>\r\n              </div>\r\n            </Step>\r\n\r\n            <Step>\r\n              <h2 className=\"text-xl font-semibold mb-2\">\r\n                Please check your email address now{\" \"}\r\n              </h2>\r\n            </Step>\r\n          </Stepper>\r\n        )}\r\n\r\n        {showLoader && (\r\n          <div className=\"flex justify-center items-center min-h-[300px]\">\r\n            <Leapfrog size={40} speed={2.5} color=\"#1A73E8\" />\r\n          </div>\r\n        )}\r\n\r\n        {completed && (\r\n          <div className=\"text-center mt-6\">\r\n            <h2 className=\"text-2xl font-bold text-green-600\">All done! 🎉</h2>\r\n            <p className=\"mt-2\">\r\n              Thanks, <strong>{name || \"friend\"}</strong>!\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,KAAK,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACxB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,kBAAkB;QACtB,cAAc;QACd,WAAW;YACT,cAAc;YACd,aAAa;QACf,GAAG;IACL;IAEA,qBACE,6LAAC;;0BACC,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC;gBAAI,WAAU;;oBACZ,CAAC,cAAc,CAAC,2BACf,6LAAC,gIAAA,CAAA,UAAO;wBACN,aAAa;wBACb,cAAc,CAAC;4BACb,QAAQ,GAAG,CAAC,iBAAiB;wBAC/B;wBACA,sBAAsB;wBACtB,gBAAe;wBACf,gBAAe;;0CAEf,6LAAC,gIAAA,CAAA,OAAI;;kDACH,6LAAC;wCAAG,WAAU;kDAA6B;;;;;;kDAG3C,6LAAC;kDAAE;;;;;;;;;;;;0CAGL,6LAAC,gIAAA,CAAA,OAAI;;kDACH,6LAAC;wCAAG,WAAU;;4CAA6B;4CACiB;;;;;;;kDAE5D,6LAAC;wCACC,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wCACxC,aAAY;wCACZ,WAAU;;;;;;oCACT;kDACH,6LAAC;kDAAE;;;;;;kDACH,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,kLAAA,CAAA,SAAM;gDACL,SAAS;gDACT,UAAU;gDACV,WAAW,AAAC,GAEX,OADC,UAAU,gBAAgB,eAC3B;0DAED,cAAA,6LAAC;oDACC,WAAW,AAAC,GAEX,OADC,UAAU,kBAAkB,iBAC7B;;;;;;;;;;;0DAGL,6LAAC;gDAAK,WAAU;0DAAyB;;;;;;;;;;;;;;;;;;0CAM7C,6LAAC,gIAAA,CAAA,OAAI;0CACH,cAAA,6LAAC;oCAAG,WAAU;;wCAA6B;wCACL;;;;;;;;;;;;;;;;;;oBAM3C,4BACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,2LAAA,CAAA,WAAQ;4BAAC,MAAM;4BAAI,OAAO;4BAAK,OAAM;;;;;;;;;;;oBAIzC,2BACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,6LAAC;gCAAE,WAAU;;oCAAO;kDACV,6LAAC;kDAAQ,QAAQ;;;;;;oCAAkB;;;;;;;;;;;;;;;;;;;;;;;;;AAOzD;GA7FwB;KAAA","debugId":null}}]
}