{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/app/auth/register/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function Register() {\r\n  const router = useRouter(); // ✅ router hook\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [pending, setPending] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleRegisterSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!name.trim() || !email.trim() || !password.trim()) {\r\n      setMessage(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      password.length < 8 ||\r\n      !/[A-Z]/.test(password) ||\r\n      !/[0-9]/.test(password)\r\n    ) {\r\n      setMessage(\r\n        \"Password must be at least 8 characters, include one uppercase letter and one number.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setMessage(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    setPending(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage(\"Registration successful!\");\r\n        // ✅ Redirect to login page after 1 second\r\n        setTimeout(() => {\r\n          router.push(\"/auth/login\");\r\n        }, 1000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessage(errorData.error || \"Something went wrong.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setMessage(\"Error during registration.\");\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegisterSubmit}>\r\n      {/* your inputs */}\r\n\r\n      <button\r\n        type=\"submit\"\r\n        disabled={pending}\r\n        className={`w-full h-12 rounded-lg cursor-pointer text-white font-semibold transition-all ${\r\n          pending\r\n            ? \"bg-gray-400 cursor-not-allowed\"\r\n            : \"bg-[#0B1F3A] hover:bg-[#12325C]\"\r\n        }`}\r\n      >\r\n        {pending ? \"Registering...\" : \"Register\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAMe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD,KAAK,gBAAgB;IAE5C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,uBAAuB,OAAO;QAClC,EAAE,cAAc;QAEhB,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI;YACrD,WAAW;YACX;QACF;QAEA,IACE,SAAS,MAAM,GAAG,KAClB,CAAC,QAAQ,IAAI,CAAC,aACd,CAAC,QAAQ,IAAI,CAAC,WACd;YACA,WACE;YAEF;QACF;QAEA,MAAM,aAAa;QACnB,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ;YAC3B,WAAW;YACX;QACF;QAEA,WAAW;QACX,WAAW;QAEX,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,sBAAsB;gBACjD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAM;oBAAO;gBAAS;YAC/C;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,WAAW;gBACX,0CAA0C;gBAC1C,WAAW;oBACT,OAAO,IAAI,CAAC;gBACd,GAAG;YACL,OAAO;gBACL,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,WAAW,UAAU,KAAK,IAAI;YAChC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,UAAU;YACxB,WAAW;QACb,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAK,UAAU;kBAGd,cAAA,6LAAC;YACC,MAAK;YACL,UAAU;YACV,WAAW,AAAC,iFAIX,OAHC,UACI,mCACA;sBAGL,UAAU,mBAAmB;;;;;;;;;;;AAItC;GA/EwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/AzPayGo/azpaygo/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}